name: Publish Minnesota Immunization Core to PyPI

on:
  release:
    types: [published]
  
  # Allow manual triggering for testing
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: true
        type: boolean

jobs:
  run-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: minnesota-immunization-core
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run tests
      run: uv run pytest

  run-linting:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: minnesota-immunization-core
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run linting
      run: uv run ruff check .

  publish:
    needs: [run-tests, run-linting]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: minnesota-immunization-core

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true

    - name: Install dependencies
      run: uv sync

    - name: Build package
      run: uv build

    - name: Test publish to PyPI
      if: ${{ github.event.inputs.test_pypi == 'true' || github.event_name == 'workflow_dispatch' }}
      run: |
        uv publish --token ${{ secrets.PYPI_TEST_API_TOKEN }} --publish-url https://test.pypi.org/legacy/

    - name: Publish to PyPI
      if: ${{ github.event.inputs.test_pypi != 'true' && github.event_name == 'release' }}
      run: |
        uv publish --token ${{ secrets.PYPI_API_TOKEN }}